package de.medizininformatikinitiative.medgraph.searchengine.model.matchingobject;

import de.medizininformatikinitiative.medgraph.searchengine.model.ScoreIncorporationStrategy;
import de.medizininformatikinitiative.medgraph.searchengine.model.identifiable.Matchable;
import de.medizininformatikinitiative.medgraph.searchengine.model.pipelinestep.Judgement;
import org.jetbrains.annotations.NotNull;

/**
 * Represents a {@link MatchingObject} whose {@link Matchable} has been judged by some metric.
 *
 * @author Markus Budeus
 */
public class JudgedObject<S extends Matchable> extends MatchingObjectBase<S> {

	/**
	 * The {@link MatchingObject}-instance which held the current object before it was judged.
	 */
	private final MatchingObject<S> source;
	/**
	 * The {@link Judgement} generated by judgding the carried {@link Matchable}.
	 */
	private final Judgement judgement;

	/**
	 * Creates a new {@link JudgedObject} which manages the given {@link Matchable}.
	 */
	public JudgedObject(@NotNull MatchingObject<S> source, Judgement judgement,
	                       ScoreIncorporationStrategy scoreIncorporationStrategy) {
		super(source.getObject(), scoreIncorporationStrategy.calculateScore(source.getScore(), judgement.getScore()));
		this.source = source;
		this.judgement = judgement;
	}

	public MatchingObject<S> getSource() {
		return source;
	}

	public Judgement getJudgement() {
		return judgement;
	}
}
